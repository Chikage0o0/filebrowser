name: Update Dockerfile VERSION

on:
  schedule:
    - cron: "0 0 * * *" # 每天运行一次，可以根据需要调整时间
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install requests
        run: pip install requests

      - name: Fetch latest tag
        id: latest-tag
        run: python .github/scripts/get_latest_version.py filebrowser/filebrowser

      - name: Update Dockerfile
        if: steps.latest-tag.outputs.tag
        run: |
          tag="${{ steps.latest-tag.outputs.tag }}"
          sed -i "s/ENV VERSION=.*/ENV VERSION=$tag/" Dockerfile

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --exit-code Dockerfile; then
            echo "No changes in Dockerfile."
            echo "skip_commit=true" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in Dockerfile."
            echo "skip_commit=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.latest-tag.outputs.tag && steps.check-changes.outputs.skip_commit == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Dockerfile
          git commit -m "Update Dockerfile VERSION to ${{ steps.latest-tag.outputs.tag }}"
          git push
          git tag ${{ steps.latest-tag.outputs.tag }}
          git push origin ${{ steps.latest-tag.outputs.tag }}
    outputs:
      skip_commit: ${{ steps.check-changes.outputs.skip_commit }}
      tag: ${{ steps.latest-tag.outputs.tag }}

  build-and-push-image:
    needs: update-version
    if: needs.update-version.outputs.skip_commit == 'false' && needs.update-version.outputs.tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Repository
        run: |
          git pull
          git checkout ${{ needs.update-version.outputs.tag }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.update-version.outputs.tag }},enable=true
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
